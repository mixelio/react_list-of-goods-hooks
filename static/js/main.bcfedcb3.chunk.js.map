{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortTypes","goodsFromServer","App","useState","DEFAULT","sortMethod","setSortMethod","sortDirection","setSortDirection","visibleGoods","goods","preperedGoods","sort","good1","good2","SORT_FIELD_ALPHABET","localeCompare","SORT_FIELD_LENGTH","length","reverse","getPreperedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,yBAAAA,E,2BAAAA,E,mBAAAA,M,KAME,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgCK,IAAMC,EAAgB,WAC3B,MAAoCC,mBAASH,EAAUI,SAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CH,oBAAS,GAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KACMC,EAhCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAAUe,oBACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAAUiB,kBACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAMwBS,CAC7BnB,EACAI,EACAE,GAQF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBAAkB,CAC3B,WAAYlB,IAAeL,EAAUe,sBAGzCS,QAAS,kBAAMlB,EAAcN,EAAUe,sBAPzC,iCAYA,wBACEO,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAC9B,WAAYlB,IAAeL,EAAUiB,oBAGzCO,QAAS,kBAAMlB,EAAcN,EAAUiB,oBAPzC,4BAYA,wBACEK,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAC9B,YAAahB,IAGjBiB,QACE,kBAAMhB,GAAkBD,IAR5B,qBAcA,wBACEe,KAAK,SACLD,UACEE,IAAW,0BAA2B,CACpC,YAAclB,IAAeL,EAAUI,UAChB,IAAlBG,IAGTiB,QAtDR,WACElB,EAAcN,EAAUI,SACxBI,GAAiB,IA4Cb,sBAcF,6BACE,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cC3HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bcfedcb3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum SortTypes {\n  SORT_FIELD_ALPHABET = 'ab',\n  SORT_FIELD_LENGTH = 'length',\n  DEFAULT = 'default',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreperedGoods(\n  goods: string[],\n  sortMethod: SortTypes,\n  sortDirection: boolean,\n): string[] {\n  const preperedGoods = [...goods];\n\n  if (sortMethod) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortMethod) {\n        case SortTypes.SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortTypes.SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortDirection) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortMethod, setSortMethod] = useState(SortTypes.DEFAULT);\n  const [sortDirection, setSortDirection] = useState(false);\n  const visibleGoods: string[] = getPreperedGoods(\n    goodsFromServer,\n    sortMethod,\n    sortDirection,\n  );\n\n  function setResetData() {\n    setSortMethod(SortTypes.DEFAULT);\n    setSortDirection(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-info', {\n              'is-light': sortMethod !== SortTypes.SORT_FIELD_ALPHABET,\n            })\n          }\n          onClick={() => setSortMethod(SortTypes.SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-success', {\n              'is-light': sortMethod !== SortTypes.SORT_FIELD_LENGTH,\n            })\n          }\n          onClick={() => setSortMethod(SortTypes.SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-warning', {\n              'is-light': !sortDirection,\n            })\n          }\n          onClick={\n            () => setSortDirection(!sortDirection)\n          }\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-info is-light', {\n              'is-hidden': (sortMethod === SortTypes.DEFAULT\n                && sortDirection === false),\n            })\n          }\n          onClick={setResetData}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}